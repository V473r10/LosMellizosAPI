// <auto-generated />
using System;
using LosMellizosAPI.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LosMellizosAPI.Migrations
{
    [DbContext(typeof(Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LosMellizosAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "Completamente natural. Sin azucar.",
                            Name = "Mantequillas de mani"
                        });
                });

            modelBuilder.Entity("LosMellizosAPI.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Class");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("LosMellizosAPI.Models.CustomerClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Threshold")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CustomerClasses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Discount = 5,
                            Name = "Bronze",
                            Threshold = 1000
                        },
                        new
                        {
                            Id = 2,
                            Discount = 10,
                            Name = "Silver",
                            Threshold = 1500
                        },
                        new
                        {
                            Id = 3,
                            Discount = 20,
                            Name = "Gold",
                            Threshold = 2500
                        });
                });

            modelBuilder.Entity("LosMellizosAPI.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Address")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("ListPrice")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("LosMellizosAPI.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("OrderId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("04d20fa3-5341-4619-8912-b622ce473f22"),
                            Active = true,
                            CategoryId = 1,
                            Description = "Puro mani",
                            Name = "Mantequilla de mani clasica",
                            Price = 250,
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("fadc6ab6-8600-47a3-8c0c-bc03c52b70a5"),
                            Active = true,
                            CategoryId = 1,
                            Description = "Puro mani con cacao amargo",
                            Name = "Mantequilla de mani con cacao amargo",
                            Price = 250,
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("7e4710c1-c513-4e2e-8e17-52358c2d6449"),
                            Active = true,
                            CategoryId = 1,
                            Description = "Puro mani con dulce de leche",
                            Name = "Mantequilla de mani con dulce de leche",
                            Price = 250,
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("a919bd2f-7afb-4a00-88c3-b41850b5215e"),
                            Active = true,
                            CategoryId = 1,
                            Description = "Puro mani endulzado con stevia",
                            Name = "Mantequilla de mani con stevia",
                            Price = 250,
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("dae93bf4-29c7-421f-8d08-7dc608b78e1e"),
                            Active = true,
                            CategoryId = 1,
                            Description = "Puro mani con proteina",
                            Name = "Mantequilla de mani con proteina",
                            Price = 290,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("LosMellizosAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Email = "fvalerio@losmellizos.com",
                            Name = "Facundo Valerio",
                            Password = "v473r10",
                            Phone = "098000000",
                            Role = "Dev",
                            UserName = "valerio"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Email = "rhenriquez@losmellizos.com",
                            Name = "Rafael Henriquez",
                            Password = "user",
                            Phone = "099000000",
                            Role = "Admin",
                            UserName = "rafa"
                        });
                });

            modelBuilder.Entity("LosMellizosAPI.Models.Customer", b =>
                {
                    b.HasOne("LosMellizosAPI.Models.CustomerClass", "CustomerClass")
                        .WithMany("Customers")
                        .HasForeignKey("Class")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerClass");
                });

            modelBuilder.Entity("LosMellizosAPI.Models.Order", b =>
                {
                    b.HasOne("LosMellizosAPI.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LosMellizosAPI.Models.Product", b =>
                {
                    b.HasOne("LosMellizosAPI.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LosMellizosAPI.Models.Order", null)
                        .WithMany("Products")
                        .HasForeignKey("OrderId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LosMellizosAPI.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("LosMellizosAPI.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("LosMellizosAPI.Models.CustomerClass", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("LosMellizosAPI.Models.Order", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
